/*
 * LobLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.lob.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.lob.api.internal.OptionalNullable;

/**
 * This is a model class for CardBase type.
 */
public class CardBase {
    @JsonInclude(JsonInclude.Include.NON_NULL)
    private OptionalNullable<String> description;
    @JsonInclude(JsonInclude.Include.NON_NULL)
    private SizeEnum size;

    /**
     * Default constructor.
     */
    public CardBase() {
        size = SizeEnum.ENUM_2125X3375;
    }

    /**
     * Initialization constructor.
     * @param  description  String value for description.
     * @param  size  SizeEnum value for size.
     */
    public CardBase(
            String description,
            SizeEnum size) {
        this.description = OptionalNullable.of(description);
        this.size = size;
    }

    /**
     * Internal initialization constructor.
     */
    protected CardBase(OptionalNullable<String> description, SizeEnum size) {
        this.description = description;
        this.size = size;
    }

    /**
     * Internal Getter for Description.
     * Description of the card.
     * @return Returns the Internal String
     */
    @JsonGetter("description")
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetDescription() {
        return this.description;
    }

    /**
     * Getter for Description.
     * Description of the card.
     * @return Returns the String
     */
    public String getDescription() {
        return OptionalNullable.getFrom(description);
    }

    /**
     * Setter for Description.
     * Description of the card.
     * @param description Value for String
     */
    @JsonSetter("description")
    public void setDescription(String description) {
        this.description = OptionalNullable.of(description);
    }

    /**
     * UnSetter for Description.
     * Description of the card.
     */
    public void unsetDescription() {
        description = null;
    }

    /**
     * Getter for Size.
     * The size of the card
     * @return Returns the SizeEnum
     */
    @JsonGetter("size")
    public SizeEnum getSize() {
        return size;
    }

    /**
     * Setter for Size.
     * The size of the card
     * @param size Value for SizeEnum
     */
    @JsonSetter("size")
    public void setSize(SizeEnum size) {
        this.size = size;
    }

    /**
     * Converts this CardBase into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "CardBase [" + "description=" + description + ", size=" + size + "]";
    }

    /**
     * Builds a new {@link CardBase.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link CardBase.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .size(getSize());
        builder.description = internalGetDescription();
        return builder;
    }

    /**
     * Class to build instances of {@link CardBase}.
     */
    public static class Builder {
        private OptionalNullable<String> description;
        private SizeEnum size = SizeEnum.ENUM_2125X3375;



        /**
         * Setter for description.
         * @param  description  String value for description.
         * @return Builder
         */
        public Builder description(String description) {
            this.description = OptionalNullable.of(description);
            return this;
        }

        /**
         * UnSetter for description.
         * @return Builder
         */
        public Builder unsetDescription() {
            description = null;
            return this;
        }

        /**
         * Setter for size.
         * @param  size  SizeEnum value for size.
         * @return Builder
         */
        public Builder size(SizeEnum size) {
            this.size = size;
            return this;
        }

        /**
         * Builds a new {@link CardBase} object using the set fields.
         * @return {@link CardBase}
         */
        public CardBase build() {
            return new CardBase(description, size);
        }
    }
}
